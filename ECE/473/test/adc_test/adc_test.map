Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_udivmodhi4.o)
                              ../../alarm_code/lib/led_driver.o (__udivmodhi4)
/usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtm128.o (exit)
/usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_copy_data.o)
                              ../../alarm_code/lib/led_driver.o (__do_copy_data)
/usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_clear_bss.o)
                              ../../alarm_code/lib/adc_driver.o (__do_clear_bss)
/usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_fixunssfsi.o)
                              ../../alarm_code/lib/adc_driver.o (__fixunssfsi)
/usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_addsub_sf.o)
                              ../../alarm_code/lib/adc_driver.o (__addsf3)
/usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_mul_sf.o)
                              ../../alarm_code/lib/adc_driver.o (__mulsf3)
/usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_ge_sf.o)
                              /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_fixunssfsi.o) (__gesf2)
/usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_sf_to_si.o)
                              /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_fixunssfsi.o) (__fixsfsi)
/usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_thenan_sf.o)
                              /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_addsub_sf.o) (__thenan_sf)
/usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_usi_to_sf.o)
                              ../../alarm_code/lib/adc_driver.o (__floatunsisf)
/usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_prologue.o)
                              /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_addsub_sf.o) (__prologue_saves__)
/usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_epilogue.o)
                              /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_addsub_sf.o) (__epilogue_restores__)
/usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_clzsi2.o)
                              /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_usi_to_sf.o) (__clzsi2)
/usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_pack_sf.o)
                              /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_addsub_sf.o) (__pack_f)
/usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_unpack_sf.o)
                              /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_addsub_sf.o) (__unpack_f)
/usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_fpcmp_parts_sf.o)
                              /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_ge_sf.o) (__fpcmp_parts_f)
/usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_clz.o)
                              /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_clzsi2.o) (__clz_tab)
/usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/libc.a(round.o)
                              ../../alarm_code/lib/adc_driver.o (round)
/usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/libc.a(fp_mintl.o)
                              /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/libc.a(round.o) (__fp_mintl)
/usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/libc.a(fp_mpack.o)
                              /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/libc.a(round.o) (__fp_mpack)
/usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/libc.a(fp_split3.o)
                              /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/libc.a(round.o) (__fp_splitA)
/usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/libc.a(fp_zero.o)
                              /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/libc.a(round.o) (__fp_szero)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800100         0x0000ff00         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtm128.o
LOAD adc_test.o
LOAD ../../alarm_code/lib/adc_driver.o
LOAD ../../alarm_code/lib/led_driver.o
LOAD /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a
LOAD /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/libc.a
LOAD /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000     0x108c
 *(.vectors)
 .vectors       0x00000000       0x8c /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtm128.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x0000008c                . = ALIGN (0x2)
                0x0000008c                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000008c        0x0 linker stubs
 *(.trampolines*)
                0x0000008c                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000008c                __ctors_start = .
 *(.ctors)
                0x0000008c                __ctors_end = .
                0x0000008c                __dtors_start = .
 *(.dtors)
                0x0000008c                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000008c        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtm128.o
                0x0000008c                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000008c        0xc /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtm128.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000098       0x1a /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_copy_data.o)
                0x00000098                __do_copy_data
 .init4         0x000000b2       0x10 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_clear_bss.o)
                0x000000b2                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000c2        0x8 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtm128.o
 *(.init9)
 *(.text)
 .text          0x000000ca        0x4 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtm128.o
                0x000000ca                __vector_22
                0x000000ca                __vector_28
                0x000000ca                __vector_1
                0x000000ca                __vector_32
                0x000000ca                __vector_34
                0x000000ca                __vector_24
                0x000000ca                __vector_12
                0x000000ca                __bad_interrupt
                0x000000ca                __vector_6
                0x000000ca                __vector_31
                0x000000ca                __vector_3
                0x000000ca                __vector_23
                0x000000ca                __vector_30
                0x000000ca                __vector_25
                0x000000ca                __vector_11
                0x000000ca                __vector_13
                0x000000ca                __vector_17
                0x000000ca                __vector_19
                0x000000ca                __vector_7
                0x000000ca                __vector_27
                0x000000ca                __vector_5
                0x000000ca                __vector_33
                0x000000ca                __vector_4
                0x000000ca                __vector_9
                0x000000ca                __vector_2
                0x000000ca                __vector_21
                0x000000ca                __vector_15
                0x000000ca                __vector_29
                0x000000ca                __vector_8
                0x000000ca                __vector_26
                0x000000ca                __vector_14
                0x000000ca                __vector_10
                0x000000ca                __vector_16
                0x000000ca                __vector_18
                0x000000ca                __vector_20
 .text          0x000000ce       0x80 adc_test.o
                0x000000ce                main
 .text          0x0000014e       0xbe ../../alarm_code/lib/adc_driver.o
                0x0000014e                enable_adc
                0x000001c8                start_adc
                0x000001cc                poll_adc
                0x000001dc                is_adc_running
                0x000001e4                get_adc
                0x000001ec                get_adc_adjusted
 .text          0x0000020c      0x19e ../../alarm_code/lib/led_driver.o
                0x0000020c                enable_leds
                0x0000021c                disable_leds
                0x00000226                init_display_struct
                0x0000023a                update_colon
                0x00000266                toggle_dot
                0x00000272                set_colon
                0x0000027a                set_zero_filled
                0x00000282                decode_number
                0x000002f0                enable_segment
                0x0000033a                set_digit
                0x00000348                update_segment
 .text          0x000003aa        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_udivmodhi4.o)
 .text          0x000003aa        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_exit.o)
 .text          0x000003aa        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_copy_data.o)
 .text          0x000003aa        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_clear_bss.o)
 .text          0x000003aa       0x58 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_fixunssfsi.o)
                0x000003aa                __fixunssfsi
 .text          0x00000402      0x350 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_addsub_sf.o)
                0x00000696                __addsf3
                0x000006f0                __subsf3
 .text          0x00000752      0x1f4 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_mul_sf.o)
                0x00000752                __mulsf3
 .text          0x00000946       0x60 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_ge_sf.o)
                0x00000946                __gesf2
 .text          0x000009a6       0xa4 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_sf_to_si.o)
                0x000009a6                __fixsfsi
 .text          0x00000a4a        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_thenan_sf.o)
 .text          0x00000a4a       0xf0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_usi_to_sf.o)
                0x00000a4a                __floatunsisf
 .text          0x00000b3a        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_prologue.o)
 .text          0x00000b3a        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_epilogue.o)
 .text          0x00000b3a       0xb4 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_clzsi2.o)
                0x00000b3a                __clzsi2
 .text          0x00000bee      0x19c /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_pack_sf.o)
                0x00000bee                __pack_f
 .text          0x00000d8a       0xd2 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_unpack_sf.o)
                0x00000d8a                __unpack_f
 .text          0x00000e5c       0xb2 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_fpcmp_parts_sf.o)
                0x00000e5c                __fpcmp_parts_f
 .text          0x00000f0e        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_clz.o)
 .text          0x00000f0e        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/libc.a(round.o)
 .text          0x00000f0e        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/libc.a(fp_mintl.o)
 .text          0x00000f0e        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/libc.a(fp_mpack.o)
 .text          0x00000f0e        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/libc.a(fp_split3.o)
 .text          0x00000f0e        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/libc.a(fp_zero.o)
                0x00000f0e                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x00000f0e       0x28 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_udivmodhi4.o)
                0x00000f0e                __udivmodhi4
 .text.libgcc   0x00000f36        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_exit.o)
 .text.libgcc   0x00000f36        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_copy_data.o)
 .text.libgcc   0x00000f36        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000f36       0x38 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_prologue.o)
                0x00000f36                __prologue_saves__
 .text.libgcc   0x00000f6e       0x36 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_epilogue.o)
                0x00000f6e                __epilogue_restores__
 .text.avr-libc.fplib
                0x00000fa4       0x40 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/libc.a(round.o)
                0x00000fa4                round
 .text.avr-libc.fplib
                0x00000fe4       0x36 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/libc.a(fp_mintl.o)
                0x00000fe4                __fp_mintl
 .text.avr-libc.fplib
                0x0000101a       0x1c /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/libc.a(fp_mpack.o)
                0x0000101a                __fp_mpack
                0x0000101e                __fp_mpack_finite
 .text.avr-libc.fplib
                0x00001036       0x44 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/libc.a(fp_split3.o)
                0x00001036                __fp_split3
                0x00001046                __fp_splitA
 .text.avr-libc.fplib
                0x0000107a        0xe /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/libc.a(fp_zero.o)
                0x0000107a                __fp_zero
                0x0000107c                __fp_szero
                0x00001088                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00001088        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_exit.o)
                0x00001088                exit
                0x00001088                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00001088        0x4 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_exit.o)
 *(.fini0)
                0x0000108c                _etext = .

.data           0x00800100      0x114 load address 0x0000108c
                0x00800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800100        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtm128.o
 .data          0x00800100        0x0 adc_test.o
 .data          0x00800100        0x0 ../../alarm_code/lib/adc_driver.o
 .data          0x00800100        0xb ../../alarm_code/lib/led_driver.o
 .data          0x0080010b        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_udivmodhi4.o)
 .data          0x0080010b        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_exit.o)
 .data          0x0080010b        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_copy_data.o)
 .data          0x0080010b        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_clear_bss.o)
 .data          0x0080010b        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_fixunssfsi.o)
 .data          0x0080010b        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_addsub_sf.o)
 .data          0x0080010b        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_mul_sf.o)
 .data          0x0080010b        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_ge_sf.o)
 .data          0x0080010b        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_sf_to_si.o)
 .data          0x0080010b        0x8 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_thenan_sf.o)
                0x0080010b                __thenan_sf
 .data          0x00800113        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_usi_to_sf.o)
 .data          0x00800113        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_prologue.o)
 .data          0x00800113        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_epilogue.o)
 .data          0x00800113        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_clzsi2.o)
 .data          0x00800113        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_pack_sf.o)
 .data          0x00800113        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_unpack_sf.o)
 .data          0x00800113        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_fpcmp_parts_sf.o)
 .data          0x00800113      0x100 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_clz.o)
                0x00800113                __clz_tab
 .data          0x00800213        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/libc.a(round.o)
 .data          0x00800213        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/libc.a(fp_mintl.o)
 .data          0x00800213        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/libc.a(fp_mpack.o)
 .data          0x00800213        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/libc.a(fp_split3.o)
 .data          0x00800213        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/libc.a(fp_zero.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800214                . = ALIGN (0x2)
 *fill*         0x00800213        0x1 00
                0x00800214                _edata = .
                0x00800214                PROVIDE (__data_end, .)

.bss            0x00800214      0x41a
                0x00800214                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800214        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtm128.o
 .bss           0x00800214        0x0 adc_test.o
 .bss           0x00800214      0x41a ../../alarm_code/lib/adc_driver.o
 .bss           0x0080062e        0x0 ../../alarm_code/lib/led_driver.o
 .bss           0x0080062e        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_udivmodhi4.o)
 .bss           0x0080062e        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_exit.o)
 .bss           0x0080062e        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_copy_data.o)
 .bss           0x0080062e        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_clear_bss.o)
 .bss           0x0080062e        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_fixunssfsi.o)
 .bss           0x0080062e        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_addsub_sf.o)
 .bss           0x0080062e        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_mul_sf.o)
 .bss           0x0080062e        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_ge_sf.o)
 .bss           0x0080062e        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_sf_to_si.o)
 .bss           0x0080062e        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_thenan_sf.o)
 .bss           0x0080062e        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_usi_to_sf.o)
 .bss           0x0080062e        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_prologue.o)
 .bss           0x0080062e        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_epilogue.o)
 .bss           0x0080062e        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_clzsi2.o)
 .bss           0x0080062e        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_pack_sf.o)
 .bss           0x0080062e        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_unpack_sf.o)
 .bss           0x0080062e        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_fpcmp_parts_sf.o)
 .bss           0x0080062e        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_clz.o)
 .bss           0x0080062e        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/libc.a(round.o)
 .bss           0x0080062e        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/libc.a(fp_mintl.o)
 .bss           0x0080062e        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/libc.a(fp_mpack.o)
 .bss           0x0080062e        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/libc.a(fp_split3.o)
 .bss           0x0080062e        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/libc.a(fp_zero.o)
 *(.bss*)
 *(COMMON)
                0x0080062e                PROVIDE (__bss_end, .)
                0x0000108c                __data_load_start = LOADADDR (.data)
                0x000011a0                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0080062e        0x0
                0x0080062e                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0080062e                PROVIDE (__noinit_end, .)
                0x0080062e                _end = .
                0x0080062e                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000     0x1d58
 *(.stab)
 .stab          0x00000000      0x6cc /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtm128.o
 .stab          0x000006cc      0x438 adc_test.o
                                0x444 (size before relaxing)
 .stab          0x00000b04      0x408 ../../alarm_code/lib/adc_driver.o
                                0x5d0 (size before relaxing)
 .stab          0x00000f0c      0x7e0 ../../alarm_code/lib/led_driver.o
                                0x9c0 (size before relaxing)
 .stab          0x000016ec      0x1b0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/libc.a(round.o)
                                0x1bc (size before relaxing)
 .stab          0x0000189c      0x174 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/libc.a(fp_mintl.o)
                                0x180 (size before relaxing)
 .stab          0x00001a10       0xe4 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/libc.a(fp_mpack.o)
                                 0xf0 (size before relaxing)
 .stab          0x00001af4      0x1d4 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/libc.a(fp_split3.o)
                                0x1e0 (size before relaxing)
 .stab          0x00001cc8       0x90 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/libc.a(fp_zero.o)
                                 0x9c (size before relaxing)

.stabstr        0x00000000      0xbdc
 *(.stabstr)
 .stabstr       0x00000000      0xbdc /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtm128.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(adc_test.elf elf32-avr)
LOAD linker stubs
